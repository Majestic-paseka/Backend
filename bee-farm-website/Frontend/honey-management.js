let selectedProductivityId = null;
let currentDeleteId = null;
let fullProductivityData = [];

// üß≤ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function fetchProductivity() {
  const token = localStorage.getItem('token');
  return fetch('http://localhost:3000/productivity', {
    headers: {
      'Authorization': `Bearer ${token}`
    }
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
    return response.json();
  });
}

document.addEventListener('DOMContentLoaded', async () => {
  const token = localStorage.getItem('token');
  if (!token) {
    window.location.href = '/login.html';
    return;
  }

  try {
    const data = await fetchProductivity();
    fullProductivityData = data;
    renderHoneyTable(data);

    // –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    ['yearFilter', 'familyFilter', 'honeyFilter', 'waxFilter'].forEach(id => {
      const el = document.getElementById(id);
      if (el) el.addEventListener('input', applyFilters);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –º—ë–¥–µ:', error);
  }
});

function applyFilters() {
  const year = document.getElementById('yearFilter').value;
  const family = document.getElementById('familyFilter').value;
  const honey = document.getElementById('honeyFilter').value;
  const wax = document.getElementById('waxFilter').value;

  const filtered = fullProductivityData.filter(entry => {
    const matchesYear = !year || entry.productivity_year === Number(year);
    const matchesFamily = !family || entry.beefamily?.beefamily_number?.toString() === family;
    const matchesHoney = !honey || entry.honey_kg >= Number(honey);
    const matchesWax = !wax || entry.wax_kg >= Number(wax);
    return matchesYear && matchesFamily && matchesHoney && matchesWax;
  });

  renderHoneyTable(filtered);
}


function renderHoneyTable(data) {
  const tableBody = document.querySelector('#honeyTable tbody');
  tableBody.innerHTML = '';

  data.forEach(entry => {
    const row = document.createElement('tr');

    row.innerHTML = `
      <td>${entry.productivity_id}</td>
      <td>${entry.productivity_year}</td>
      <td>${entry.beefamily?.beefamily_number || '-'}</td>
      <td>${entry.honey_kg}</td>
      <td>${entry.wax_kg}</td>
      <td class="action-buttons">
        <button class="details-button" data-id="${entry.productivity_id}">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
        <button class="edit-button" data-id="${entry.productivity_id}">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
        <button class="delete-button" data-id="${entry.productivity_id}">–£–¥–∞–ª–∏—Ç—å</button>
      </td>
    `;

    row.querySelector('.details-button').addEventListener('click', () => {
      showDetailsModal(entry);
    });
    row.querySelector('.edit-button').addEventListener('click', () => {
      showEditModal(entry);
    });
    row.querySelector('.delete-button').addEventListener('click', () => {
      showDeleteModal(entry.productivity_id);
    });

    tableBody.appendChild(row);
  });
}

// üîç –ú–æ–¥–∞–ª–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
function showDetailsModal(entry) {
  document.getElementById('detail-id').textContent = entry.productivity_id;
  document.getElementById('detail-year').textContent = entry.productivity_year;
  document.getElementById('detail-family').textContent = entry.beefamily?.beefamily_number || '-';
  document.getElementById('detail-honey').textContent = `${entry.honey_kg} –∫–≥`;
  document.getElementById('detail-wax').textContent = `${entry.wax_kg} –∫–≥`;
  document.getElementById('detailsModal').style.display = 'block';
}

// ‚úèÔ∏è –ú–æ–¥–∞–ª–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function showEditModal(entry) {
  selectedProductivityId = entry.productivity_id;
  document.getElementById('edit-id').value = entry.productivity_id;
  document.getElementById('edit-year').value = entry.productivity_year;
  document.getElementById('edit-honey').value = entry.honey_kg;
  document.getElementById('edit-wax').value = entry.wax_kg;
  document.getElementById('editModal').style.display = 'block';
}

// ‚ùå –ú–æ–¥–∞–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
function showDeleteModal(id) {
  currentDeleteId = id;
  console.log('–ó–∞–ø–æ–º–Ω–µ–Ω ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', currentDeleteId);
  document.getElementById('deleteModal').style.display = 'block';
}

// ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
document.getElementById('confirm-delete').addEventListener('click', async () => {
  const token = localStorage.getItem('token');
  console.log('–£–¥–∞–ª—è–µ–º ID:', currentDeleteId);
  if (!currentDeleteId) return;

  try {
    const response = await fetch(`http://localhost:3000/productivity/${currentDeleteId}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');

    document.getElementById('deleteModal').style.display = 'none';
    currentDeleteId = null;

    const data = await fetchProductivity();
    renderHoneyTable(data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏');
  }
});

// ‚ùå –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è
document.getElementById('cancel-delete').addEventListener('click', () => {
  document.getElementById('deleteModal').style.display = 'none';
});

// üíæ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
document.getElementById('edit-form').addEventListener('submit', async (e) => {
  e.preventDefault();

  const id = document.getElementById('edit-id').value;
  const year = Number(document.getElementById('edit-year').value);
  const honey = Number(document.getElementById('edit-honey').value);
  const wax = Number(document.getElementById('edit-wax').value);
  const token = localStorage.getItem('token');

  try {
    await fetch(`http://localhost:3000/productivity/${id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`
      },
      body: JSON.stringify({
        productivity_year: year,
        honey_kg: honey,
        wax_kg: wax
      })
    });

    document.getElementById('editModal').style.display = 'none';
    location.reload();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  }
});

// ‚ûï –ú–æ–¥–∞–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
document.getElementById('addButton').addEventListener('click', () => {
  document.getElementById('addYear').value = '';
  document.getElementById('addBeefamily').value = '';
  document.getElementById('addHoney').value = '';
  document.getElementById('addWax').value = '';
  document.getElementById('addModal').style.display = 'block';
});

document.getElementById('addClose').addEventListener('click', () => {
  document.getElementById('addModal').style.display = 'none';
});

// üì• –ó–∞–≥—Ä—É–∑–∫–∞ –ø—á–µ–ª–∏–Ω—ã—Ö —Å–µ–º–µ–π –≤ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
async function populateBeefamilySelect() {
  const token = localStorage.getItem('token');
  const select = document.getElementById('addBeefamily');
  select.innerHTML = '<option value="" disabled selected>‚Äî –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–º—å—é ‚Äî</option>';

  try {
    const response = await fetch('http://localhost:3000/beefamilies', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–µ–º–µ–π');

    const families = await response.json();

    families.forEach(family => {
      const option = document.createElement('option');
      option.value = family.beefamily_id;
      option.textContent = `–°–µ–º—å—è ‚Ññ${family.beefamily_number}`;
      select.appendChild(option);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—á–µ–ª–∏–Ω—ã—Ö —Å–µ–º–µ–π:', error);
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ "–î–æ–±–∞–≤–∏—Ç—å"
document.getElementById('addButton').addEventListener('click', () => {
  document.getElementById('addForm').reset();
  populateBeefamilySelect();
  document.getElementById('addModal').style.display = 'block';
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
document.getElementById('addClose').addEventListener('click', () => {
  document.getElementById('addModal').style.display = 'none';
});

// üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('addForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const year = Number(document.getElementById('addYear').value);
  const beefamilyId = Number(document.getElementById('addBeefamily').value);
  const honey = Number(document.getElementById('addHoney').value);
  const wax = Number(document.getElementById('addWax').value);
  const token = localStorage.getItem('token');

  try {
    const response = await fetch('http://localhost:3000/productivity', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify({
        productivity_year: year,
        beefamily_id: beefamilyId,
        honey_kg: honey,
        wax_kg: wax
      })
    });

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏');
    }

    document.getElementById('addModal').style.display = 'none';
    document.getElementById('addForm').reset();

    const data = await fetchProductivity();
    renderHoneyTable(data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏');
  }
});

// ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª–æ–∫ –ø–æ –∫—Ä–µ—Å—Ç–∏–∫—É
document.querySelectorAll('.close-modal').forEach(btn => {
  btn.addEventListener('click', () => {
    btn.closest('.modal').style.display = 'none';
  });
});

// ‚úñ –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
window.addEventListener('click', e => {
  document.querySelectorAll('.modal').forEach(modal => {
    if (e.target === modal) modal.style.display = 'none';
  });
});

const addFormElement = document.getElementById('add-form');
if (addFormElement) {
  addFormElement.addEventListener('submit', async (e) => {
  e.preventDefault();

  const year = Number(document.getElementById('addYear').value);
  const beefamilyId = Number(document.getElementById('addBeefamily').value);
  const honey = Number(document.getElementById('addHoney').value);
  const wax = Number(document.getElementById('addWax').value);
  const token = localStorage.getItem('token');

  try {
    const response = await fetch('http://localhost:3000/productivity', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify({
        productivity_year: year,
        beefamily_id: beefamilyId,
        honey_kg: honey,
        wax_kg: wax
      })
    });

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏');
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
    document.getElementById('addModal').style.display = 'none';

    // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—è
    e.target.reset();

    // –û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
    const data = await fetchProductivity();
    renderHoneyTable(data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏');
  }
});


}})
